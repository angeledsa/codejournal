{
    "README.md": "# AI-Driven Self-Help App for the Twelve Steps\n\n## Overview\nThis project is an AI-driven self-help application designed to assist users in working through the Twelve Steps. The app leverages OpenAI's GPT model to provide personalized guidance and insights, helping users to progress through the steps effectively. It includes features like inventory management, amends planning, and daily reviews.\n\n## Features\n- **Step-by-Step Guidance:** Personalized advice and support for each of the Twelve Steps.\n- **Inventory Management:** Helps users create and manage inventories of fears, resentments, and character defects.\n- **Amends Planning:** Suggests lists of people to whom the user owes amends and tracks progress.\n- **Daily Reviews:** Facilitates nightly reviews and suggests corrective measures for the following day.\n- **Customized Prayers:** Provides tailored prayers based on the user\u2019s current progress and needs.\n\n## Technology Stack\n- **Backend:** Flask (Python)\n- **Frontend:** React (JavaScript)\n- **Mobile:** React Native (JavaScript)\n- **Database:** SQLite with SQLAlchemy ORM\n- **AI Integration:** OpenAI GPT API\n- **Version Control:** Git\n- **Deployment:** Heroku / AWS\n\n## Prerequisites\n- macOS (Development environment)\n- Homebrew\n- Python 3.9+\n- Node.js and npm\n\n## Installation\n\n### Step 1: Install Homebrew\n```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\nStep 2: Install Git\nbash\nCopy code\nbrew install git\nStep 3: Install Python\nbash\nCopy code\nbrew install python@3.9\nStep 4: Install Node.js and npm\nbash\nCopy code\nbrew install node\nStep 5: Clone the Repository\nbash\nCopy code\ngit clone https://github.com/yourusername/self-help-app.git\ncd self-help-app\nStep 6: Set Up the Backend\nCreate and Activate a Virtual Environment\nbash\nCopy code\npython3.9 -m venv venv\nsource venv/bin/activate\nInstall Backend Dependencies\nbash\nCopy code\npip install -r backend/requirements.txt\nStep 7: Set Up the Frontend\nNavigate to the Frontend Directory\nbash\nCopy code\ncd frontend\nInstall Frontend Dependencies\nbash\nCopy code\nnpm install\nStep 8: Configure Environment Variables\nBackend (.env)\nCreate a .env file in the backend directory and add your OpenAI API key:\n\nplaintext\nCopy code\nOPENAI_API_KEY=your_openai_api_key_here\nUsage\nRunning the Backend Server\nNavigate to the backend directory and run the Flask server:\n\nbash\nCopy code\ncd backend\nsource ../venv/bin/activate\npython -m flask run\nRunning the Frontend Development Server\nNavigate to the frontend directory and start the development server:\n\nbash\nCopy code\ncd frontend\nnpm start\nProject Structure\nplaintext\nCopy code\nself-help-app/\n\u251c\u2500\u2500 backend/\n\u2502   \u251c\u2500\u2500 app.py\n\u2502   \u251c\u2500\u2500 definitions.py\n\u2502   \u251c\u2500\u2500 profile.py\n\u2502   \u251c\u2500\u2500 inventory.py\n\u2502   \u251c\u2500\u2500 amends.py\n\u2502   \u251c\u2500\u2500 daily_review.py\n\u2502   \u251c\u2500\u2500 utils.py\n\u2502   \u251c\u2500\u2500 openai_api.py\n\u2502   \u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 frontend/\n\u2502   \u251c\u2500\u2500 public/\n\u2502   \u2502   \u251c\u2500\u2500 index.html\n\u2502   \u251c\u2500\u2500 src/\n\u2502   \u2502   \u251c\u2500\u2500 App.js\n\u2502   \u2502   \u251c\u2500\u2500 index.js\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Home.js\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Onboarding.js\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Steps.js\n\u2502   \u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 mobile/\n\u2502   \u251c\u2500\u2500 App.js\n\u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 Home.js\n\u2502   \u2502   \u251c\u2500\u2500 Onboarding.js\n\u2502   \u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\nBackend (Flask)\napp.py: Entry point for the Flask application.\ndefinitions.py: Defines defects and strengths.\nprofile.py: Manages user profiles and related data.\ninventory.py: Handles inventories of fears, resentments, and character defects.\namends.py: Manages the process of making amends.\ndaily_review.py: Facilitates nightly reviews and corrective measures.\nutils.py: Utility functions and helpers.\nopenai_api.py: Functions to interact with OpenAI's API.\nrequirements.txt: Backend dependencies.\nFrontend (React)\npublic/: Public assets.\nsrc/: React components and application logic.\nApp.js: Main application component.\nindex.js: Entry point for the React application.\ncomponents/: React components.\nHome.js: Home screen component.\nOnboarding.js: Onboarding component.\nSteps.js: Steps component.\npackage.json: Node.js dependencies.\nMobile (React Native)\nApp.js: Main application component for mobile.\ncomponents/: React Native components.\nHome.js: Home screen component.\nOnboarding.js: Onboarding component.\npackage.json: Mobile dependencies.\nConfiguration\nOpenAI API Key\nTo use the OpenAI GPT API, you need to set up your API key. Create a .env file in the backend directory and add your API key:\n\nplaintext\nCopy code\nOPENAI_API_KEY=your_openai_api_key_here\nContributing\nWe welcome contributions! Please fork the repository and submit pull requests for review.\n\nLicense\nThis project is licensed under the MIT License. See the LICENSE file for details.\n\nAcknowledgements\nAlcoholics Anonymous for the Twelve Steps framework.\nOpenAI for the GPT model."
}